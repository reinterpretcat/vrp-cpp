#ifndef VRP_TESTUTILS_SPECIFICSOLUTIONS_HPP
#define VRP_TESTUTILS_SPECIFICSOLUTIONS_HPP

#include "test_utils/PopulationFactory.hpp"
#include "test_utils/ProblemStreams.hpp"

namespace vrp {
namespace test {

const auto T = vrp::models::Plan::assign();
const auto F = vrp::models::Plan::empty();

/// This individuum has one extra route with one customer.
struct create_c101_near_optimum final {
  vrp::models::Solution operator()() {
    return createPopulation(
      createProblem<create_c101_problem_stream>(),

      {0, 20, 24, 25, 23, 22, 21, 5, 3, 7, 8, 11, 9, 6, 4, 2, 1, 10, 13, 17, 18, 19, 15, 16, 14, 12,
       0, 0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0},

      {0,          10,         15,         17,         21.2426414, 24.2426414, 26.2426414,
       15.1327457, 16.1327457, 18.1327457, 20.9611721, 24.1234493, 27.2857265, 29.5217953,
       31.757864,  35.3634148, 37.3634148, 16.7630539, 30.8058434, 34.8058434, 37.8058434,
       42.8058434, 47.8058434, 52.8058434, 54.8058434, 57.8058434, 0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0},

      {0,   100, 195, 287, 822, 915, 1007, 105, 196, 288, 380, 538, 631, 723, 817, 915, 1007, 447,
       120, 214, 307, 402, 497, 592, 684,  777, 0,   0,   0,   0,   0,   0,   0,   0,   0,    0,
       0,   0,   0,   0,   0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,   0},

      {200, 190, 180, 140, 130, 110, 90, 190, 180, 160, 140, 130, 120, 100, 90, 60, 50, 190,
       170, 150, 130, 120, 80,  40,  30, 10,  200, 0,   0,   0,   0,   0,   0,  0,  0,  0,
       0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,   0,   0,  0},

      {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

      {T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T,
       T, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F});
  }
};

/// This individuum has one extra route with one customer.
struct create_c101_specific_individuum_1 final {
  vrp::models::Solution operator()() {
    return createPopulation(
      createProblem<create_c101_problem_stream>(),

      {0, 20, 21, 22, 23, 24, 25, 10, 11, 9, 6, 4, 5, 3, 7, 8, 2, 1, 13, 17, 18, 19, 15, 16, 14, 12,
       0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0},

      {0,          10,         12,         12.1655254, 13,         15,         17,
       34.2046509, 37.2046509, 40.3669281, 42.6029968, 44.8390656, 15.1327457, 16.1327457,
       18.1327457, 20.9611721, 28.2412815, 30.2412815, 30.8058434, 34.8058434, 37.8058434,
       42.8058434, 47.8058434, 52.8058434, 54.8058434, 57.8058434, 0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0,          0,          0,          0,          0,
       0,          0,          0},

      {0,   100, 1004, 902, 822, 155, 259, 447, 540, 633, 725, 817, 105, 196, 288, 380, 915, 1007,
       120, 214, 307,  402, 497, 592, 684, 777, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
       0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0},

      {200, 190, 170, 180, 190, 190, 150, 140, 130, 120, 100, 90, 190, 180, 160, 140, 110, 100,
       170, 150, 130, 120, 80,  40,  30,  10,  200, 0,   0,   0,  0,   0,   0,   0,   0,   0,
       0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0},

      {0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

      {T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T,
       T, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F});
  }
};

}  // namespace test
}  // namespace vrp

#endif  // VRP_TESTUTILS_PROBLEMSTREAMS_HPP