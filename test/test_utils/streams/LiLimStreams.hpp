#pragma once

#include "test_utils/streams/LiLimBuilder.hpp"

namespace vrp::test {

struct create_two_sequences_stream {
  std::stringstream operator()(int vehicles = 1, int capacity = 10) {
    return LiLimBuilder()
      .setVehicle(vehicles, capacity)
      .addCustomer({0, 0, 0, 0, 0, 1000, 0, 0, 0})
      .addCustomer({1, 7, 0, 1, 0, 1000, 0, 0, 2})
      .addCustomer({2, 5, 0, -1, 0, 1000, 0, 1, 0})
      .addCustomer({3, 9, 0, 1, 0, 1000, 0, 0, 4})
      .addCustomer({4, 3, 0, -1, 0, 1000, 0, 3, 0})
      .build();
  }
};

/// Specifies the problem from li&lim set.
struct create_lc101_problem_stream {
  std::stringstream operator()(int vehicles = 25, int capacity = 200) {
    return LiLimBuilder()
      .setVehicle(vehicles, capacity)
      .addCustomer({0, 40, 50, 0, 0, 1236, 0, 0, 0})
      .addCustomer({1, 45, 68, -10, 912, 967, 90, 11, 0})
      .addCustomer({2, 45, 70, -20, 825, 870, 90, 6, 0})
      .addCustomer({3, 42, 66, 10, 65, 146, 90, 0, 75})
      .addCustomer({4, 42, 68, -10, 727, 782, 90, 9, 0})
      .addCustomer({5, 42, 65, 10, 15, 67, 90, 0, 7})
      .addCustomer({6, 40, 69, 20, 621, 702, 90, 0, 2})
      .addCustomer({7, 40, 66, -10, 170, 225, 90, 5, 0})
      .addCustomer({8, 38, 68, 20, 255, 324, 90, 0, 10})
      .addCustomer({9, 38, 70, 10, 534, 605, 90, 0, 4})
      .addCustomer({10, 35, 66, -20, 357, 410, 90, 8, 0})
      .addCustomer({11, 35, 69, 10, 448, 505, 90, 0, 1})
      .addCustomer({12, 25, 85, -20, 652, 721, 90, 18, 0})
      .addCustomer({13, 22, 75, 30, 30, 92, 90, 0, 17})
      .addCustomer({14, 22, 85, -40, 567, 620, 90, 16, 0})
      .addCustomer({15, 20, 80, -10, 384, 429, 90, 19, 0})
      .addCustomer({16, 20, 85, 40, 475, 528, 90, 0, 14})
      .addCustomer({17, 18, 75, -30, 99, 148, 90, 13, 0})
      .addCustomer({18, 15, 75, 20, 179, 254, 90, 0, 12})
      .addCustomer({19, 15, 80, 10, 278, 345, 90, 0, 15})
      .addCustomer({20, 30, 50, 10, 10, 73, 90, 0, 24})
      .addCustomer({21, 30, 52, -10, 914, 965, 90, 30, 0})
      .addCustomer({22, 28, 52, -20, 812, 883, 90, 28, 0})
      .addCustomer({23, 28, 55, 10, 732, 777, 0, 0, 103})
      .addCustomer({24, 25, 50, -10, 65, 144, 90, 20, 0})
      .addCustomer({25, 25, 52, 40, 169, 224, 90, 0, 27})
      .addCustomer({26, 25, 55, -10, 622, 701, 90, 29, 0})
      .addCustomer({27, 23, 52, -40, 261, 316, 90, 25, 0})
      .addCustomer({28, 23, 55, 20, 546, 593, 90, 0, 22})
      .addCustomer({29, 20, 50, 10, 358, 405, 90, 0, 26})
      .addCustomer({30, 20, 55, 10, 449, 504, 90, 0, 21})
      .addCustomer({31, 10, 35, -30, 200, 237, 90, 32, 0})
      .addCustomer({32, 10, 40, 30, 31, 100, 90, 0, 31})
      .addCustomer({33, 8, 40, 40, 87, 158, 90, 0, 37})
      .addCustomer({34, 8, 45, -30, 751, 816, 90, 38, 0})
      .addCustomer({35, 5, 35, 10, 283, 344, 90, 0, 39})
      .addCustomer({36, 5, 45, 10, 665, 716, 0, 0, 105})
      .addCustomer({37, 2, 40, -40, 383, 434, 90, 33, 0})
      .addCustomer({38, 0, 40, 30, 479, 522, 90, 0, 34})
      .addCustomer({39, 0, 45, -10, 567, 624, 90, 35, 0})
      .addCustomer({40, 35, 30, -20, 264, 321, 90, 42, 0})
      .addCustomer({41, 35, 32, -10, 166, 235, 90, 43, 0})
      .addCustomer({42, 33, 32, 20, 68, 149, 90, 0, 40})
      .addCustomer({43, 33, 35, 10, 16, 80, 90, 0, 41})
      .addCustomer({44, 32, 30, 10, 359, 412, 90, 0, 46})
      .addCustomer({45, 30, 30, 10, 541, 600, 90, 0, 48})
      .addCustomer({46, 30, 32, -10, 448, 509, 90, 44, 0})
      .addCustomer({47, 30, 35, -10, 1054, 1127, 90, 49, 0})
      .addCustomer({48, 28, 30, -10, 632, 693, 90, 45, 0})
      .addCustomer({49, 28, 35, 10, 1001, 1066, 90, 0, 47})
      .addCustomer({50, 26, 32, 10, 815, 880, 90, 0, 52})
      .addCustomer({51, 25, 30, 10, 725, 786, 0, 0, 101})
      .addCustomer({52, 25, 35, -10, 912, 969, 90, 50, 0})
      .addCustomer({53, 44, 5, 20, 286, 347, 90, 0, 58})
      .addCustomer({54, 42, 10, 40, 186, 257, 90, 0, 60})
      .addCustomer({55, 42, 15, -40, 95, 158, 90, 57, 0})
      .addCustomer({56, 40, 5, 30, 385, 436, 90, 0, 59})
      .addCustomer({57, 40, 15, 40, 35, 87, 90, 0, 55})
      .addCustomer({58, 38, 5, -20, 471, 534, 90, 53, 0})
      .addCustomer({59, 38, 15, -30, 651, 740, 90, 56, 0})
      .addCustomer({60, 35, 5, -40, 562, 629, 90, 54, 0})
      .addCustomer({61, 50, 30, -10, 531, 610, 90, 67, 0})
      .addCustomer({62, 50, 35, 20, 262, 317, 90, 0, 68})
      .addCustomer({63, 50, 40, 50, 171, 218, 90, 0, 74})
      .addCustomer({64, 48, 30, 10, 632, 693, 0, 0, 102})
      .addCustomer({65, 48, 40, 10, 76, 129, 90, 0, 72})
      .addCustomer({66, 47, 35, 10, 826, 875, 90, 0, 69})
      .addCustomer({67, 47, 40, 10, 12, 77, 90, 0, 61})
      .addCustomer({68, 45, 30, -20, 734, 777, 90, 62, 0})
      .addCustomer({69, 45, 35, -10, 916, 969, 90, 66, 0})
      .addCustomer({70, 95, 30, -30, 387, 456, 90, 81, 0})
      .addCustomer({71, 95, 35, 20, 293, 360, 90, 0, 77})
      .addCustomer({72, 53, 30, -10, 450, 505, 90, 65, 0})
      .addCustomer({73, 92, 30, -10, 478, 551, 90, 76, 0})
      .addCustomer({74, 53, 35, -50, 353, 412, 90, 63, 0})
      .addCustomer({75, 45, 65, -10, 997, 1068, 90, 3, 0})
      .addCustomer({76, 90, 35, 10, 203, 260, 90, 0, 73})
      .addCustomer({77, 88, 30, -20, 574, 643, 90, 71, 0})
      .addCustomer({78, 88, 35, 20, 109, 170, 0, 0, 104})
      .addCustomer({79, 87, 30, 10, 668, 731, 90, 0, 80})
      .addCustomer({80, 85, 25, -10, 769, 820, 90, 79, 0})
      .addCustomer({81, 85, 35, 30, 47, 124, 90, 0, 70})
      .addCustomer({82, 75, 55, 20, 369, 420, 90, 0, 85})
      .addCustomer({83, 72, 55, -20, 265, 338, 90, 87, 0})
      .addCustomer({84, 70, 58, 20, 458, 523, 90, 0, 89})
      .addCustomer({85, 68, 60, -20, 555, 612, 90, 82, 0})
      .addCustomer({86, 66, 55, 10, 173, 238, 90, 0, 91})
      .addCustomer({87, 65, 55, 20, 85, 144, 90, 0, 83})
      .addCustomer({88, 65, 60, -10, 645, 708, 90, 90, 0})
      .addCustomer({89, 63, 58, -20, 737, 802, 90, 84, 0})
      .addCustomer({90, 60, 55, 10, 20, 84, 90, 0, 88})
      .addCustomer({91, 60, 60, -10, 836, 889, 90, 86, 0})
      .addCustomer({92, 67, 85, 20, 368, 441, 90, 0, 93})
      .addCustomer({93, 65, 85, -20, 475, 518, 90, 92, 0})
      .addCustomer({94, 65, 82, -10, 285, 336, 90, 96, 0})
      .addCustomer({95, 62, 80, -20, 196, 239, 90, 98, 0})
      .addCustomer({96, 60, 80, 10, 95, 156, 90, 0, 94})
      .addCustomer({97, 60, 85, 30, 561, 622, 0, 0, 106})
      .addCustomer({98, 58, 75, 20, 30, 84, 90, 0, 95})
      .addCustomer({99, 55, 80, -20, 743, 820, 90, 100, 0})
      .addCustomer({100, 55, 85, 20, 647, 726, 90, 0, 99})
      .addCustomer({101, 25, 30, -10, 725, 786, 90, 51, 0})
      .addCustomer({102, 48, 30, -10, 632, 693, 90, 64, 0})
      .addCustomer({103, 28, 55, -10, 732, 777, 90, 23, 0})
      .addCustomer({104, 88, 35, -20, 109, 170, 90, 78, 0})
      .addCustomer({105, 5, 45, -10, 665, 716, 90, 36, 0})
      .addCustomer({106, 60, 85, -30, 561, 622, 90, 97, 0})
      .build();
  }
};
}