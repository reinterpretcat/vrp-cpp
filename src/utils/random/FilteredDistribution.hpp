#ifndef VRP_UTILS_RANDOM_FILTEREDDISTRIBUTION_HPP
#define VRP_UTILS_RANDOM_FILTEREDDISTRIBUTION_HPP

#include "runtime/Config.hpp"

namespace vrp {
namespace utils {

/// Allows to filter values generated by distribution.
template<typename Dist, typename Filter>
class filtered_distribution {
  Dist dist;
  Filter filter;

public:
  filtered_distribution(Dist dist, Filter filter) : dist(dist), filter(filter) {}

  template<typename Gen>
  ANY_EXEC_UNIT auto operator()(Gen& generator) -> decltype(dist(generator)) {
    auto value = dist(generator);
    while (!filter(value))
      value = dist(generator);
    return value;
  }
};

template<typename Dist, typename Filter>
filtered_distribution<Dist, Filter> filtered(Dist dist, Filter filter) {
  return filtered_distribution<Dist, Filter>(dist, filter);
}

}  // namespace utils
}  // namespace vrp

#endif  // VRP_UTILS_RANDOM_FILTEREDDISTRIBUTION_HPP
